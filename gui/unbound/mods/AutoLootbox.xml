<ui>	
	<block className="LootBoxes">
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="controller" value="'lesta.dialogs.controllers.EntitySingletonController'; 'optionData'"/>
		<bind name="controller" value="'lesta.dialogs.controllers.EntitySingletonController'; 'realmConstants'"/>
		<bind name="firstEntityDH" value="'lootboxEntity'; CC.lootboxConfigComponent"/>
		<bind name="watchDH" value="'maxBought';				['lootboxEntity.lootboxConfigComponent.evUpdate'];	lootboxEntity.lootboxConfigComponent.maxBought"/>
		<bind name="watchDH" value="'lootboxExp';			['lootboxEntity.lootboxStorageComponent.evUpdate'];	lootboxEntity.lootboxStorageComponent.lootExp"/>
		<bind name="watchDH" value="'boughtToday';			['lootboxEntity.lootboxStorageComponent.evUpdate'];	lootboxEntity.lootboxStorageComponent.boughtToday"/>
		<bind name="watchDH" value="'lootboxesInStorage';	['lootboxEntity.lootboxStorageComponent.evUpdate'];	lootboxEntity.lootboxStorageComponent.inStorage"/>
		<bind name="watchDH" value="'dropTimeStamp';			['lootboxEntity.lootboxStorageComponent.evUpdate'];	lootboxEntity.lootboxStorageComponent.dropAt"/>
		<bind name="watchDH" value="'openedLootboxRewards';	['lootboxEntity.lootboxComponent.evUpdate'];		lootboxEntity.lootboxComponent.rewards"/>
		<bind name="watchDH" value="'activeAnimation';		['lootboxEntity.lootboxAnimationState.evUpdate'];	lootboxEntity.lootboxAnimationState.active"/>
		<bind name="watchDH" value="'lootboxOpened';			['lootboxEntity.lootboxAnimationState.evUpdate'];	lootboxEntity.lootboxAnimationState.open"/>
		<bind name="collectionDH" value="CC.lootboxTypeInfoComponent; 'lootboxTypesEntitiesList'"/>
		<bind name="changeDispatch" value="lootboxTypesEntitiesList; 'evLootboxTypesListChanged'"/>
		<bind name="action" value="'evLootboxTypesListChanged'; 'setUserPref'; {value: 0, name: 'selectedLootbox'}"/>
		<bind name="watch" value="'allBoxesBought'; maxBought == boughtToday"/>
		<bind name="watch" value="'canBuyLootbox'; lootboxExp &gt;= lootboxEntity.lootboxConfigComponent.prices[boughtToday]"/>
		<bind name="watch" value="'curLootboxPrice'; allBoxesBought	? -1
													:  lootboxEntity.lootboxConfigComponent.prices[boughtToday]"/>
		<!--mod-->
		<bind name="watch" value="'isGetBtnEnabled'; canBuyLootbox &amp;&amp; !allBoxesBought"/>
		<bind name="watch" value="'isOpenALLBtnEnabled'; lootboxesInStorage &gt;= 2"/>
		<!--mod-->
		<bind name="watch" value="'openLootboxesBtnLabel';
		lootboxesInStorage &gt;= SC.Common.LOOTBOX_CONSTANTS.MAX_MASS_LOOTBOX_OPEN_AMOUNT	? subst(	'IDS_SUBST_PL_OPEN_N_CONTAINERS', [],
																									{ count: SC.Common.LOOTBOX_CONSTANTS.MAX_MASS_LOOTBOX_OPEN_AMOUNT },
																									SC.Common.LOOTBOX_CONSTANTS.MAX_MASS_LOOTBOX_OPEN_AMOUNT	)
																						: 'IDS_OPEN_ALL_LOOTBOXES' "/>
		<bind name="changeDispatch" value="activeAnimation; 'activeAnimationChangedEv'; {}; 2"/>
		<!--mod
		<bind name="action" value="'activeAnimationChangedEv'; activeAnimation ? 'lockBargeControls' : 'unlockBargeControls'; {}"/>
		-->
		<bind name="stageSize"/>
		<bind name="watch" value="'leftOffset'; ((20 + (stageWidth - 1280)/14))"/>
		<styleClass value="$FullsizeAbsolute"/>
		<block>
			<bind name="style" value="'marginLeft'; (leftOffset - 11) + 'px'"/>
			<style>
				<marginTop value="720:16,1080:32ah"/>
			</style>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<marginLeft value="-12px"/>
					<marginRight value="-12px"/>
					<marginBottom value="-6px"/>
					<marginTop value="-6px"/>
				</style>
				<block className="BlurMapCustom">
					<bind name="controller" value="'lesta.dialogs.controllers.EntitySingletonController'; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap5_feather" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
			</block>
			<block>
				<!--mod
				<bind name="style" value="'hitTest'; activeAnimation ? false : true"/>
				<bind name="style" value="'colorMatrixFilter'; activeAnimation ? '0 -80 0 -20' : ''"/>
				-->
				<bind name="instance" value="'BackButton'; {_text: 'IDS_RETURN_TO_DOCK', _action: 'navigateTo', _actionParams: {route: SC.Ui_windows.ROUTE.PORT}}"/>
			</block>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<top value="720:24,1080:40ah"/>
			</style>
			<bind name="style" value="'right'; (leftOffset - 4) + 'px'"/>
			<!--mod
			<bind name="style" value="'hitTest'; activeAnimation ? false : true"/>
			<bind name="style" value="'colorMatrixFilter'; activeAnimation ? '0 -80 0 -20' : ''"/>
			-->
			<bind name="instance" value="'ModalWindowCloseIcon'; {}"/>
		</block>
		<block>
			<style>
				<top value="19sh"/>
				<width value="100%"/>
				<position value="absolute"/>
			</style>
			<block>
				<style>
					<position value="absolute"/>
					<width value="300px"/>
				</style>
				<bind name="style" value="'marginLeft'; (leftOffset) + 'px'"/>
				<block>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginLeft value="-28px"/>
						<marginRight value="-28px"/>
						<marginBottom value="-14px"/>
						<marginTop value="-14px"/>
					</style>
					<block className="BlurMapCustom">
						<bind name="controller" value="'lesta.dialogs.controllers.EntitySingletonController'; 'optionData'"/>
						<styleClass value="$FullsizeAbsolute"/>
						<style>
							<hitTest value="false"/>
						</style>
						<bind name="visible" value="optionData.blurEnabled"/>
						<block className="mc_blurmap5_feather" type="native">
							<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
							<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
							<styleClass value="$Fullsize"/>
							<bind name="blurMap" value="0"/>
						</block>
					</block>
				</block>
				<block type="text">
					<styleClass value="$TextDefaultBold17NM"/>
					<style>
						<alpha value="0.8"/>
						<marginBottom value="16px"/>
					</style>
					<bind name="text" value="toUpperCase(tr('IDS_LOOTBOXES'))"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<alpha value="0.8"/>
						<marginBottom value="8px"/>
					</style>
					<bind name="repeat" value="[	{_paragraphText: 'IDS_LOOTBOX_HINT_0'},
								{_paragraphText: 'IDS_LOOTBOX_HINT_1'}]; 'RepeatParagraphItem'; {	_maxWidth: 300, _marginBottom: '18px',
																									_middleAligned: false, _class: '$TextDefault17NM',
																									_textAlign: 'left', _leading: -2}"/>
				</block>
				<block>
					<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
					<bind name="watchDH" value="'hasRecruitsStatus'; ['selfPlayerEntity.accountSelf.evHasRecruitsStatusChanged']; selfPlayerEntity.accountSelf.hasRecruitsStatus"/>
					<bind name="instance" value="'ReferralSystemBanner'; hasRecruitsStatus == SC.Common.HAS_RECRUITS_STATUS.NO ? {} : null"/>
				</block>
				<block>
					<bind name="visible" value="(eventLootboxBannerTillEnd &gt; 0) &amp;&amp; (eventLootboxBannerTillStart &lt; 0)"/>
					<bind name="primaryEntityDH" value="'webEventEntity'; CC.webEvent; 'WebEventLootboxesShop'"/>
					<bind name="watchDH" value="'startTS'; ['webEventEntity.webEvent.evUpdate']; webEventEntity.webEvent.startTS"/>
					<bind name="watchDH" value="'endTS'; ['webEventEntity.webEvent.evUpdate']; webEventEntity.webEvent.endTS"/>
					<bind name="serverTime" value="'serverTime'"/>
					<bind name="watch" value="'eventLootboxBannerTillStart'; (startTS - serverTime)"/>
					<bind name="watch" value="'eventLootboxBannerTillEnd'; (endTS - serverTime)"/>
					<style>
						<marginTop value="24px"/>
					</style>
					<bind name="instance" value="'EventLootboxBanner';	{	_backgroundImage	: 'url:../service_kit/lootbox_banners/lootbox_banner.png',
															_showAnimation		: true,
															_bannerText			: 'IDS_PURCHASE_LOOTBOX_EVENT',
															_instructionText 	: 'IDS_LOOTBOXES_TOOLTIP_TEXT',
															_request 			: 'openMetashop',
															_requestParams 		: { url: URL.EVENT_LOOTBOX_INFO_IN_GAME }
														}"/>
				</block>
			</block>
			<!--mod-->
			<bind name="var" value="{selectedType: (userPrefs.selectedLootboxType == null) ? SC.Common.COMMON_LOOTBOX_TYPES.CREDITS : userPrefs.selectedLootboxType}"/>
			<bind name="watch" value="'_action';        autoCollectLootbox ? 'LootboxProxy.buyLootbox' : null"/>
			<bind name="watch" value="'_actionParams';  autoCollectLootbox ? {userChoiceType: selectedType, forceStart: selectedType != SC.Common.COMMON_LOOTBOX_TYPES.LUCKY} : null"/>
			<!--mod-->
			<block>
				<style>
					<position value="absolute"/>
					<width value="320px"/>
					<top value="-14px"/>
				</style>
				<bind name="style" value="'right'; (leftOffset) + 'px'"/>
				<block>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginLeft value="-30px"/>
						<marginRight value="-30px"/>
						<marginBottom value="-33px"/>
						<marginTop value="-33px"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap10_feather" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 0.55}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 0.55}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
				<block className="notification_panel" type="native">
					<bind name="visible" value="optionData.contrast"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginLeft value="-30px"/>
						<marginRight value="-30px"/>
						<marginBottom value="-33px"/>
						<marginTop value="-33px"/>
					</style>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<height value="91px"/>
					</style>
					<block>
						<bind name="fade" value="!(allBoxesBought); 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}; 1"/>
						<bind name="name" value="'earnedExp'"/>
						<styleClass value="$MiddleAligned"/>
						<style>
							<backgroundColor value="0x01000000"/>
						</style>
						<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_LOOTBOX_EXP_HINT'}"/>
						<block>
							<block type="text">
								<style>
									<fontSize value="48"/>
								</style>
								<styleClass value="$TextAccentBoldAccountLevel1"/>
								<bind name="text" value="format(lootboxExp, -1)"/>
							</block>
							<block>
								<styleClass value="$MiddleVAligned"/>
								<style>
									<paddingLeft value="2px"/>
								</style>
								<block>
									<style>
										<marginLeft value="-1px"/>
										<marginRight value="-2px"/>
									</style>
									<bind name="instance" value="'Currency'; { _currency: SC.Common.CURRENCIES.XP, _extraLarge: true }"/>
								</block>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
						<block type="text">
							<style>
								<marginTop value="-9px"/>
								<marginBottom value="9px"/>
							</style>
							<styleClass value="$MiddleAligned"/>
							<styleClass value="$TextHeader"/>
							<bind name="class" value="'$FontColorBlueish'"/>
							<bind name="text" value="'IDS_AVAILABLE_EXP_FOR_LOOTBOXES'"/>
						</block>
					</block>
					<block>
						<bind name="fade" value="allBoxesBought; 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}; 1"/>
						<bind name="countdown" value="dropTimeStamp; 'countdownText'; 'hh:mm:ss'"/>
						<style>
							<width value="100%"/>
							<position value="absolute"/>
							<bottom value="17px"/>
						</style>
						<block type="text">
							<style>
								<width value="100%"/>
								<textAlign value="center"/>
							</style>
							<styleClass value="$TextHeaderWhiteBold"/>
							<bind name="class" value="'$FontColorOrange'"/>
							<bind name="text" value="toUpperCase(tr('IDS_LOOTBOX_PURCHASE_WILL_BE_AVAILABLE_AFTER'))"/>
						</block>
						<block type="text">
							<style>
								<marginTop value="3px"/>
							</style>
							<styleClass value="$MiddleAligned"/>
							<styleClass value="$TextHeaderWhiteBold"/>
							<bind name="class" value="'$FontColorOrange'"/>
							<bind name="pureText" value="countdownText"/>
						</block>
					</block>
				</block>
				<!--mod-->
				<block>
					<bind name="watch" value=" 'autoCollectLootbox'; (userPrefs.elementsGroupExpand.autoCollectLootbox == null) ? false : userPrefs.elementsGroupExpand.autoCollectLootbox"/>
					<bind name="catch" value="'switchAutoCollectLootbox'; { autoCollectLootbox: !autoCollectLootbox }; 'saveAutoCollectLootbox'"/>
					<bind name="action" value="'saveAutoCollectLootbox' ; 'setUserPref' ; {value: autoCollectLootbox, name: 'elementsGroupExpand', subName: 'autoCollectLootbox'}"/>
					<bind name="dispatch" value="'click'; 'switchAutoCollectLootbox'"/>
					<bind name="instance" value="'CheckBox'; { _isChecked: autoCollectLootbox, _label: 'IDS_AUTOPURCHASE'}"/>
					<bind name="watch" value=" 'canAutoCollectLootbox'; autoCollectLootbox &amp;&amp; canBuyLootbox &amp;&amp; !allBoxesBought"/>
					<bind name="dispatch" value="'lootboxBoughtEv'; canAutoCollectLootbox ? 'evAutoCollectLootbox' : 'evFake'; {}; 2"/>
					<!--bind name="changeDispatch" value="boughtToday; canAutoCollectLootbox ? 'evAutoCollectLootbox' : 'evFake'; {}; 2"/-->
					<!--^^in case player can collect more than 1 containers with single battle. Maybe unnecessary-->
					<bind name="changeDispatch" value="canAutoCollectLootbox; 'evAutoCollectLootbox'; {}; 2; true"/>
					<bind name="action" value="'evAutoCollectLootbox'; _action; _actionParams"/>
					<style>
						<marginBottom value="10px"/>
						<marginTop value="-10px"/>
					</style>
					<styleClass value="$MiddleAligned"/>
				</block>
				<!--mod-->
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="2px"/>
							<backgroundSize value="fill"/>
							<marginTop value="1px"/>
							<backgroundImage value="url:../service_kit/dividers/divider_h.png"/>
						</style>
					</block>
					<block>
						<block className="HorizontalDivider">
							<styleClass value="$PxHorizontalCorrection"/>
							<style>
								<width value="100%"/>
								<height value="2px"/>
								<backgroundSize value="fill"/>
								<marginTop value="1px"/>
								<backgroundImage value="url:../service_kit/dividers/divider_h.png"/>
							</style>
						</block>
						<style>
							<position value="absolute"/>
							<width value="100%"/>
						</style>
					</block>
				</block>
				<block>
					<style>
						<height value="144px"/>
						<width value="100%"/>
					</style>
					<bind name="transition" value="allBoxesBought; 0.15; {height: 146}; {height: 104}; {height: 144}; SC.Common.EASING_FUNCTIONS.OUT_QUAD; 0.17"/>
					<block>
						<styleClass value="$MiddleAligned"/>
						<style>
							<marginBottom value="39px"/>
							<marginTop value="62px"/>
						</style>
						<bind name="repeat" value="lootboxEntity.lootboxConfigComponent.prices; 'LootboxProgressBarWithLootbox'; {_isGetBtnEnabled: isGetBtnEnabled, _activeAnimation: activeAnimation}"/>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<params>
							<param name="name" value="getLootBox"/>
						</params>
						<bind name="feature" value="30; ''"/>
						<bind name="fade" value="(canBuyLootbox &amp;&amp; !allBoxesBought); 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}; 1; 0.15"/>
						<styleClass value="$MiddleAligned"/>
						<style>
							<width value="200px"/>
						</style>
						<block>
							<bind name="instance" value="'DefaultButton'; {	_width: 			'200px', 
															_enabled: 			isGetBtnEnabled, 
															_isTransactionBtn: 	true,
															_request:			'openPurchaseLootboxWindow',
															_requesParams: 		{},
															_focusIndex:		0,
															_defaultFocused:	false,
															_label: 			'IDS_PURCHASE_LOOTBOX_C'}"/>
						</block>
						<block>
							<bind name="watch" value="'isNewMarkerLootbox'; feature_30 == 'new'"/>
							<style>
								<position value="absolute"/>
								<top value="-8px"/>
								<right value="-16px"/>
							</style>
							<bind name="instance" value="'MarkerNewAttention'; isNewMarkerLootbox &amp;&amp; canBuyLootbox ? { } : null"/>
						</block>
					</block>
					<block>
						<bind name="fade" value="!canBuyLootbox &amp;&amp; !allBoxesBought; 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}; 1; 0.15"/>
						<styleClass value="$MiddleAligned"/>
						<block type="text">
							<styleClass value="$TextHeader"/>
							<bind name="class" value="'$FontColorBlueish'"/>
							<bind name="text" value="tr('IDS_EXP_TO_NEXT_LOOTBOX') + tr('IDS_COLON')"/>
						</block>
						<block>
							<style>
								<marginLeft value="2px"/>
								<marginTop value="2px"/>
							</style>
							<bind name="instance" value="'PriceTag'; {	priceInfo: {	finalPrice: curLootboxPrice - lootboxExp,
																		currency: SC.Common.CURRENCIES.XP	},
														_medium: true	}"/>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="2px"/>
							<backgroundSize value="fill"/>
							<marginTop value="1px"/>
							<backgroundImage value="url:../service_kit/dividers/divider_h.png"/>
						</style>
					</block>
					<block>
						<block className="HorizontalDivider">
							<styleClass value="$PxHorizontalCorrection"/>
							<style>
								<width value="100%"/>
								<height value="2px"/>
								<backgroundSize value="fill"/>
								<marginTop value="1px"/>
								<backgroundImage value="url:../service_kit/dividers/divider_h.png"/>
							</style>
						</block>
						<style>
							<position value="absolute"/>
							<width value="100%"/>
						</style>
					</block>
				</block>
				<block>
					<style>
						<marginTop value="21px"/>
						<marginBottom value="40px"/>
						<width value="100%"/>
					</style>
					<block type="text">
						<bind name="transition" value="(lootboxesInStorage &gt; 0); 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}; SC.Common.EASING_FUNCTIONS.OUT_QUAD; 0.15"/>
						<style>
							<width value="100%"/>
							<marginBottom value="24px"/>
							<marginTop value="-3px"/>
							<textAlign value="center"/>
						</style>
						<styleClass value="$TextHeaderWhiteBold"/>
						<bind name="class" value="'$FontSizeHeader4'"/>
						<bind name="text" value="subst('IDS_OWNED_LOOTBOXES', [], {lootboxesCount: lootboxesInStorage}, lootboxesInStorage)"/>
					</block>
					<block type="text">
						<bind name="transition" value="(lootboxesInStorage &lt;= 0); 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}; SC.Common.EASING_FUNCTIONS.OUT_QUAD; 0.15"/>
						<style>
							<width value="100%"/>
							<position value="absolute"/>
							<textAlign value="center"/>
						</style>
						<styleClass value="$TextHeaderWhiteBold"/>
						<bind name="class" value="'$FontColorOrange'"/>
						<bind name="text" value="toUpperCase(tr('IDS_YOU_HAVE_NO_LOOTBOXES'))"/>
					</block>
					<block>
						<params>
							<param name="name" value="openLootBox"/>
						</params>
						<!--mod-->
						<bind name="watch" value="'_isOpenBtnEnabled'; lootboxesInStorage &gt; 0"/>
						<!--mod-->
						<bind name="transition" value="(lootboxesInStorage &gt; 0); 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}"/>
						<styleClass value="$MiddleAligned"/>
						<style>
							<width value="210px"/>
						</style>
						<bind name="instance" value="'DefaultButton'; {	_width: '210px',
														_enabled: _isOpenBtnEnabled,
														_isTransactionBtn: true,
														_action: 'LootboxProxy.openLootbox',
														_actionParams: {},
														_focusIndex: 1,
														_dispatch: 'openLootboxClicked',
														_label: 'IDS_OPEN_LOOTBOX',
														_defaultFocused: true}"/>
						<bind name="dispatch" value="'openLootboxClicked'; lootboxOpened ? 'hideRewards' : null; {}; SC.Common.UBSCOPE_EVENT_DIRECTIONS.DOWN"/>
					</block>
					<block>
						<params>
							<param name="name" value="openAllLootBoxes"/>
						</params>
						<bind name="firstEntityDH" value="'lootboxStateEntity'; CC.lootboxOpeningState"/>
						<bind name="handleEventDH" value="'lootboxStateEntity.lootboxOpeningState.evLootboxesOpenStarted'; 'startOpenLootboxes'"/>
						<bind name="action" value="'startOpenLootboxes'; 'openLootboxes'; {}"/>
						<bind name="action" value="'click'; 'setUserPref'; {value: 0, name: 'selectedLootbox'}"/>
						<bind name="fade" value="(lootboxesInStorage &gt; 2); 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}"/>
						<styleClass value="$MiddleAligned"/>
						<style>
							<width value="210px"/>
							<marginTop value="8px"/>
						</style>
						<!--mod-->
						<bind name="style" value="'hitTest'; lootboxesInStorage &gt; 2"/>
						<!--mod-->
						<bind name="instance" value="'DefaultButton'; {	_width: '210px',
														_enabled: isOpenALLBtnEnabled,
														_isTransactionBtn: true,
														_action: 'LootboxProxy.openLootboxes',
														_actionParams: {},
														_focusIndex: 2,
														_label: openLootboxesBtnLabel	}"/>
					</block>
					<block>
						<bind name="transition" value="(lootboxesInStorage &gt; 0); 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}"/>
						<styleClass value="$MiddleAligned"/>
						<style>
							<width value="210px"/>
							<marginTop value="8px"/>
						</style>
						<bind name="instance" value="'DefaultButton';	{	_type: SC.Ui_styles.BUTTON_TYPE.SECONDARY,
															_width: '210px', _height: '27px',
															_enabled: _isOpenBtnEnabled,
															_focusIndex: 3,
															_isTransactionBtn: true,
															_request: 'showLootboxTypes',
															_label: toUpperCase(tr('IDS_OPEN_LOOTBOX_TYPES')) }"/>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="lootboxOpened"/>
				<style>
					<top value="19.5sh"/>
				</style>
				<styleClass value="$MiddleAlignedAbsolutely"/>
				<styleClass value="$MiddleVAligned"/>
				<block>
					<bind name="repeat" value="(lootboxOpened ? openedLootboxRewards : 0); 'LootboxRewardItemAdapter'; {_openedLootboxRewards: openedLootboxRewards}"/>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
		<bind name="var" value="{lootboxGot: false}"/>
		<bind name="handleEventDH" value="'lootboxEntity.lootboxStorageComponent.evLootboxGot'; 'lootboxBoughtEv'"/>
		<bind name="watchDH" value="'isEpicBox';				['lootboxEntity.lootboxStorageComponent.evLootboxGot'];	lootboxEntity.lootboxStorageComponent.isCurBoxEpic"/>
		<bind name="watchDH" value="'chosenToGotBoxType';	['lootboxEntity.lootboxStorageComponent.evLootboxGot'];	lootboxEntity.lootboxStorageComponent.chosenBoxType"/>
		<bind name="catch" value="'lootboxBoughtEv'; {lootboxGot: true}"/>
		<bind name="watch" value="'isEpicLootboxGotNotFromLuckyType'; (isEpicBox &amp;&amp; (chosenToGotBoxType != SC.Common.COMMON_LOOTBOX_TYPES.LUCKY) &amp;&amp; lootboxGot)"/>
		<bind name="dispatch" value="'lootboxBoughtEv'; 'lootboxBoughtFinishedEv'; {}; 2; 4.5"/>
		<bind name="catch" value="'lootboxBoughtFinishedEv'; {lootboxGot: false}"/>
		<block>
			<styleClass value="$EyeLevelVAligned"/>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<bind name="fade" value="!(isEpicLootboxGotNotFromLuckyType); 0.25; {alpha: 0}; {alpha: 1}; {alpha: 0}; 1; 3.2"/>
			<bind name="instance" value="'LuckyLootboxAnimation'; isEpicLootboxGotNotFromLuckyType ? {} : null"/>
		</block>
	</block>
</ui>